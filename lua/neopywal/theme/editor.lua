local M = {}
local O = require("neopywal").options

local mix = function (color, option, factor)
	require("neopywal").mix(color, option, factor)
end

M.get = function(colors)
	return {
		-- UI:
		Normal = { bg = O.transparent and colors.none or colors.ackground, fg = colors.foreground },
		NormalNC = { bg = O.dim_inactive and mix(colors.background, "black", 30) or colors.background }, -- normal text in non-current windows.
		Terminal = { link = "Normal" },
		EndOfBuffer = { fg = colors.background },
		Folded = { bg = colors.color0, fg = colors.foreground, bold = true },
		FoldColumn = { link = "SignColumn" },
		ColorColumn = { link = "CursorColumn" },
		SignColumn = { bg = O.transparent and colors.none or colors.background, fg = colors.foreground },
		ToolbarLine = { bg = colors.background, fg = colors.foreground },
		Conceal = { bg = colors.background, fg = colors.color8 },
		Cursor = { bg = colors.cursor, fg = colors.foreground, reverse = true },
		vCursor = { link = "Cursor" },
		iCursor = { link = "Cursor" },
		lCursor = { link = "Cursor" },
		CursorIM = { link = "Cursor" },
		TermCursor = { link = "Cursor" },
		TermCursorNC = { link = "Cursor" },
		LineNr = { fg = colors.color8 },
		CursorLine = { bg = colors.color0 },
		CursorColumn = { bg = colors.color0 },
		CursorLineNr = { link = "CursorLine" },
		CursorLineFold = { link = "SignColumn" },
		DiffAdd = { fg = colors.color10 },
		DiffChange = { fg = colors.color12 },
		DiffDelete = { fg = colors.color9 },
		DiffText = { reverse = true },
		Directory = { fg = colors.color4 },
		ErrorMsg = { fg = colors.color1, bold = true, underline = true },
		WarningMsg = { fg = colors.color3, bold = true },
		ModeMsg = { fg = colors.foreground, bold = true },
		MoreMsg = { fg = colors.color4, bold = true },
		IncSearch = { bg = colors.color1, fg = colors.background, bold = true },
		Search = { bg = colors.color2, fg = colors.background, bold = true },
		MatchParen = { bg = colors.color8 },
		NonText = { fg = colors.color8 },
		Whitespace = { fg = colors.color8 },
		SpecialKey = { fg = colors.color8 },
		Pmenu = {
			bg = (O.transparent_background and vim.o.pumblend == 0) and colors.none or colors.color8,
			fg = colors.foreground,
		},
		PmenuSbar = { link = "Pmenu" },
		PmenuSel = { bg = colors.color4, fg = colors.background },
		PmenuThumb = { link = "PmenuSel" },
		WildMenu = { bg = colors.color4, fg = colors.color8 },
		Question = { fg = colors.color3 },
		SpellBad = { fg = colors.color1, undercurl = true },
		SpellCap = { fg = colors.color3, undercurl = true },
		SpellLocal = { fg = colors.color4, undercurl = true },
		SpellRare = { fg = colors.color5, undercurl = true },
		-- StatusLine                = { bg = colors.foreground, fg = colors.background }, -- Mini.statusline highlights.
		StatusLine = { bg = O.transparent and colors.none or colors.background, fg = colors.foreground }, -- Lualine highlights.
		StatusLineNC = { bg = colors.color8 },
		StatusLineTerm = { link = "StatusLine" },
		StatusLineTermNC = { link = "StatusLine" },
		TabLine = { link = "Normal" },
		TabLineFill = { link = "TabLine" },
		TabLineSel = { bg = colors.color0, fg = colors.color4, bold = true, italic = true },
		VertSplit = { bg = O.transparent and colors.none or colors.background, fg = colors.color7 },
		Visual = { bg = colors.color5, fg = colors.background, bold = true },
		VisualNOS = { link = "Visual", underline = true },
		QuickFixLine = { fg = colors.color4, bold = true },
		Debug = { fg = colors.color3 }, -- Debugging statements.
		debugPC = { bg = colors.color2, fg = colors.color8 },
		debugBreakpoint = { bg = colors.color1, fg = colors.color8 },
		ToolbarButton = { bg = colors.color4, fg = colors.color8 },
		healthError = { fg = colors.color1 },
		healthSuccess = { fg = colors.color2 },
		healthWarning = { fg = colors.color3 },
		MsgArea = { link = "Normal" },
		MsgSeparator = { link = "Normal" },
		Type           = { fg = colors.color4, italic = true },
		Structure      = { fg = colors.color4, italic = true },
		StorageClass   = { fg = colors.color4, italic = true },
		Identifier     = { fg = colors.color11, italic = true },
		Constant       = { fg = colors.color11, italic = true },
		PreProc        = { fg = colors.color1 },
		PreCondit      = { fg = colors.color1 },
		Include        = { fg = colors.color1 },
		Keyword        = { fg = colors.color1 },
		Define         = { fg = colors.color1 },
		Typedef        = { fg = colors.color1 },
		Exception      = { fg = colors.color1 },
		Conditional    = { fg = colors.color1 },
		Repeat         = { fg = colors.color1 },
		Statement      = { fg = colors.color1 },
		Macro          = { fg = colors.color5 },
		Error          = { fg = colors.color1 },
		Label          = { fg = colors.color5 },
		Special        = { fg = colors.color5 },
		SecialChar     = { fg = colors.color5 },
		SpecialComment = { fg = colors.color8, italic = true },
		Substitute     = { bg = colors.color4, fg = colors.background, bold = true },
		Variable       = { fg = colors.foreground },
		Boolean        = { fg = colors.color5 },
		String         = { fg = colors.color3 },
		Character      = { fg = colors.color3 },
		Number         = { fg = colors.color5 },
		Float          = { bg = O.transparent and colors.none or colors.background, fg = colors.color5 },
		NormalFloat    = { bg = O.transparent and colors.none or colors.background },
		FloatBorder    = { bg = O.transparent and colors.none or colors.background },
		FloatTitle     = { fg = colors.color2, bold = true, italic = true },
		Function       = { fg = colors.color2 },
		Operator       = { fg = colors.color1 },
		Title          = { fg = colors.color1, bold = true },
		Tag            = { fg = colors.color11 },
		Delimiter      = { fg = colors.foreground },
		Comment        = { fg = colors.color8, italic = true },
		Todo           = { fg = colors.color4, bold = true, italic = true },
		Ignore         = { fg = colors.color8 },
		Underlined     = { underline = true },
	}
end

return M
