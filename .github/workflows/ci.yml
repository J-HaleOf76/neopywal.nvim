name: Continuous Integration

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  stylua:
    name: Stylua
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Stylua
        uses: JohnnyMorganz/stylua-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --color always --check lua

  tests:
    name: Tests
    needs:
      - stylua
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        nvim-versions: ["stable", "nightly"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.nvim-versions }}
      - name: Neovim Version
        run: nvim --version
      - name: colors-wal.vim
        run: |
          mkdir -p "$HOME/.cache/wal/"
          cp ./tests/colors-wal.vim "$HOME/.cache/wal/"
      - name: Lazy.nvim Tests
        run: |
          nvim --headless -V -u tests/lazy.lua +q
      - name: Plenary Tests
        run: nvim --headless --noplugin -V -u tests/plenary.lua -c "PlenaryBustedDirectory tests/ { minimal_init = './tests/plenary.lua', sequential = true }"

  docs:
    name: Gen Vimdoc
    needs:
      - stylua
      - tests
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Gen Vimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: neopywal
          description: "(Neo)pywal for (Neo)vim"
          pandoc: "README.md"
          toc: true
          version: "nvim >= 0.8.0"
          treesitter: true
      - name: Commit Docs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "docs: auto generate vimdoc"
          branch: ${{ github.head_ref }}

  release:
    name: Gen Release
    needs:
      - stylua
      - tests
      - docs
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: ${{ github.ref == 'refs/heads/master' && github.repository_owner == 'RedsXDD' }}
    runs-on: ubuntu-latest
    steps:
      - name: release-please-action
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: test
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tag Stable Versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
